{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6qsgQajHMkwS9ZgLrrvjBchc4ReDCpKM\",\n  authDomain: \"brady-9a097.firebaseapp.com\",\n  projectId: \"brady-9a097\",\n  storageBucket: \"brady-9a097.appspot.com\",\n  messagingSenderId: \"80307267436\",\n  appId: \"1:80307267436:web:6d5687491c6511bcb17549\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider).then(() => {\n    window.location.href = '/about';\n  });\n};\nexport const signUpWithGoogle = async () => {\n  const {\n    user\n  } = auth.signInWithPopup(provider).then(async result => {\n    let user = result.user;\n    let username = result.user.displayName;\n    let email = result.user.email;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    const exists = snapshot.exists;\n\n    if (!snapshot.data.username) {\n      const data = await userRef.set({\n        email,\n        username\n      });\n    }\n\n    if (exists) {\n      console.log(\"i existed\");\n    }\n  }).catch(error => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    var email = error.email;\n    var credential = error.credential;\n  });\n};\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      username\n    } = user;\n\n    try {\n      await userRef.set({ ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebase;","map":{"version":3,"sources":["/Volumes/EX-DRIVE/Code_HW/SSprojects/movieCritic/src/firebase/firebase.util.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","window","location","href","signUpWithGoogle","user","result","username","displayName","email","userRef","firestore","doc","uid","snapshot","get","exists","data","set","console","log","catch","error","errorCode","code","errorMessage","message","credential","generateUserDocument","additionalData","getUserDocument","userDocument"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6qsgQajHMkwS9ZgLrrvjBchc4ReDCpKM\",\n  authDomain: \"brady-9a097.firebaseapp.com\",\n  projectId: \"brady-9a097\",\n  storageBucket: \"brady-9a097.appspot.com\",\n  messagingSenderId: \"80307267436\",\n  appId: \"1:80307267436:web:6d5687491c6511bcb17549\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider).then(()=>{window.location.href = '/about'});\n};\n\nexport const signUpWithGoogle = async () => {\n  const {user} = auth.signInWithPopup(provider).then( async (result) => {\n    let user = result.user;\n    let username = result.user.displayName;\n    let email = result.user.email;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    const exists = snapshot.exists;\n    if(!snapshot.data.username){\n      const data = await userRef.set({email, username});\n      \n    }\n    if(exists){\n      console.log(\"i existed\")\n    }\n  }).catch((error) => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    var email = error.email;\n    var credential = error.credential;\n  });\n};\n\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, username } = user;\n    try {\n      await userRef.set({\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}