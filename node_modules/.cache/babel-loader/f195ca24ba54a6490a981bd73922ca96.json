{"ast":null,"code":"// import {React, useEffect, useState} from 'react'\n// import ReviewList from '../Components/ReviewList'\n// import {Paper, Grid} from '@material-ui/core';\n// import { firestore } from '../firebase/firebase.util';\n// import { useLocation} from 'react-router-dom'\n// import '../Style.css';\n// import { makeStyles } from '@material-ui/core/styles';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n// const useStyles = makeStyles((theme) => ({\n//   searchResultPic: {\n//     width: '100%',\n//     height: '100%',\n//     objectFit: 'cover',\n//     border: '1px solid #2A363B',\n//     borderRadius: '10px',\n//   },\n//   movieImgWrapper:{\n//     width:'20%',\n//     float: 'left',\n//     clear:'left',\n//   },\n//   headingWrapper:{\n//     marginTop:'10px',\n//     marginLeft:'30px',\n//     marginBottom:'20px',\n//     display:'flex',\n//     justifyContent:'space-between'\n//   },\n//   descriptionWrapper:{\n//     width:'78%',\n//     float:'right',\n//     clear: 'right',\n//   },\n//   ratingText:{\n//     fontFamily: 'Raleway',\n//     marginTop:'0px',\n//     fontWeight:'light'\n//   },\n//   titleText:{\n//     fontFamily: 'Raleway',\n//     fontSize: '50px',\n//     fontWeight: 'bold',\n//     marginBottom:'0px',\n//   }\n// }))\n// export default function Movie(){\n//     const classes = useStyles();\n//     const [loading, setLoading] = useState(false);\n//     const [reviews, setReviews] = useState([]);\n//     const[movie, setMovie] = useState([]);\n//     const location = useLocation();\n//     let movieId = new URLSearchParams(location.search).get('id')\n//     useEffect(()=>{\n//        setLoading(true)\n//       fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n//       .then(response => response.json())\n//       .then((data)=>{\n//           setMovie(data)\n//           setLoading(false)\n//         })\n//       },[setLoading, setMovie])\n//     useEffect(() => {\n//         setLoading(true);\n//         (async () => {\n//           try {\n//             const postsRef = firestore.collection(\"reviews\");\n//             const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n//             const data = postsDoc.docs.map((item) => ({\n//               id: item.id,\n//               ...item.data(),\n//             }));\n//             setReviews(data);\n//             setLoading(false);\n//           } catch (error) {\n//             setLoading(false);\n//           }\n//         })();\n//       }, [setLoading, setReviews]);\n//       if (loading || (reviews.length === 0 && reviews)) {\n//         return <CircularProgress />;\n//       }\n//     return(\n//         <>\n//         <div style={{width:'100%'}}>\n//           <Paper spacing={0} style={{backgroundColor: '#FECEAB', marginLeft: '50px',marginRight: '50px', marginTop: '100px',padding: '20px', minHeight:'80vh'}}>\n//             <div className={classes.headingWrapper}>\n//             <div className={classes.movieImgWrapper}>\n//               <img className={classes.searchResultPic}src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}></img>\n//             </div>\n//             <div className={classes.descriptionWrapper}>\n//               <Grid container spacing={3}>\n//                 <Grid item xs={12}>\n//                   <h1 className={classes.titleText}>{movie.title}</h1>\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <h2 className={classes.ratingText}>Average Rating: {movie.vote_average}</h2>\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <h2 className={classes.ratingText}>Rating by Friends: 8.7</h2>\n//                 </Grid>\n//               </Grid>\n//             </div>\n//           </div>\n//             <div>\n//               <h1>Reviews</h1>\n//               <ReviewList reviews={reviews}/>\n//             </div>\n//           </Paper>\n//         </div>\n//         </>\n//     )\n// }","map":{"version":3,"sources":["/Volumes/EX-DRIVE/Code_HW/SSprojects/movieCritic/src/Pages/Movie.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import {React, useEffect, useState} from 'react'\n// import ReviewList from '../Components/ReviewList'\n// import {Paper, Grid} from '@material-ui/core';\n// import { firestore } from '../firebase/firebase.util';\n// import { useLocation} from 'react-router-dom'\n// import '../Style.css';\n// import { makeStyles } from '@material-ui/core/styles';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n\n\n// const useStyles = makeStyles((theme) => ({\n//   searchResultPic: {\n//     width: '100%',\n//     height: '100%',\n//     objectFit: 'cover',\n//     border: '1px solid #2A363B',\n//     borderRadius: '10px',\n//   },\n//   movieImgWrapper:{\n//     width:'20%',\n//     float: 'left',\n//     clear:'left',\n\n//   },\n//   headingWrapper:{\n//     marginTop:'10px',\n//     marginLeft:'30px',\n//     marginBottom:'20px',\n//     display:'flex',\n//     justifyContent:'space-between'\n//   },\n//   descriptionWrapper:{\n//     width:'78%',\n//     float:'right',\n//     clear: 'right',\n//   },\n//   ratingText:{\n//     fontFamily: 'Raleway',\n//     marginTop:'0px',\n//     fontWeight:'light'\n//   },\n//   titleText:{\n//     fontFamily: 'Raleway',\n//     fontSize: '50px',\n//     fontWeight: 'bold',\n//     marginBottom:'0px',\n//   }\n// }))\n\n// export default function Movie(){\n//     const classes = useStyles();\n//     const [loading, setLoading] = useState(false);\n//     const [reviews, setReviews] = useState([]);\n//     const[movie, setMovie] = useState([]);\n\n//     const location = useLocation();\n//     let movieId = new URLSearchParams(location.search).get('id')\n\n\n\n//     useEffect(()=>{\n//        setLoading(true)\n//       fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n//       .then(response => response.json())\n//       .then((data)=>{\n//           setMovie(data)\n//           setLoading(false)\n//         })\n\n//       },[setLoading, setMovie])\n\n//     useEffect(() => {\n//         setLoading(true);\n//         (async () => {\n//           try {\n//             const postsRef = firestore.collection(\"reviews\");\n//             const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n//             const data = postsDoc.docs.map((item) => ({\n//               id: item.id,\n//               ...item.data(),\n//             }));\n//             setReviews(data);\n//             setLoading(false);\n//           } catch (error) {\n//             setLoading(false);\n//           }\n//         })();\n\n//       }, [setLoading, setReviews]);\n\n//       if (loading || (reviews.length === 0 && reviews)) {\n//         return <CircularProgress />;\n\n//       }\n//     return(\n//         <>\n//         <div style={{width:'100%'}}>\n//           <Paper spacing={0} style={{backgroundColor: '#FECEAB', marginLeft: '50px',marginRight: '50px', marginTop: '100px',padding: '20px', minHeight:'80vh'}}>\n//             <div className={classes.headingWrapper}>\n//             <div className={classes.movieImgWrapper}>\n//               <img className={classes.searchResultPic}src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}></img>\n//             </div>\n//             <div className={classes.descriptionWrapper}>\n//               <Grid container spacing={3}>\n//                 <Grid item xs={12}>\n//                   <h1 className={classes.titleText}>{movie.title}</h1>\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <h2 className={classes.ratingText}>Average Rating: {movie.vote_average}</h2>\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <h2 className={classes.ratingText}>Rating by Friends: 8.7</h2>\n//                 </Grid>\n\n//               </Grid>\n//             </div>\n//           </div>\n//             <div>\n//               <h1>Reviews</h1>\n//               <ReviewList reviews={reviews}/>\n//             </div>\n\n//           </Paper>\n//         </div>\n\n//         </>\n//     )\n\n// }"]},"metadata":{},"sourceType":"module"}