{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport ReviewList from '../Components/ReviewList';\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\nimport { useLocation } from 'react-router-dom';\nimport '../Style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  searchResultPic: {\n    width: '100%',\n    height: '100%',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    objectFit: 'cover',\n    border: '1px solid #2A363B',\n    borderRadius: '10px'\n  },\n  movieImgWrapper: {\n    height: '500px',\n    width: '100px'\n  }\n}));\nexport default function Movie() {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  let movieId = new URLSearchParams(location.search).get('id');\n  useEffect(() => {\n    setLoading(true); //  (async ()=>{\n    //   try{\n    //     let response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n    //     response = await response.json()\n    //     setMovie(response) \n    //   }\n    //   catch(error){\n    //     setLoading(false);\n    //   }\n    //  })()\n\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`).then(response => response.json()).then(data => {\n      setMovie(data);\n      setLoading(false);\n    });\n  }, [setLoading, setMovie]);\n  useEffect(() => {\n    setLoading(true);\n\n    (async () => {\n      try {\n        const postsRef = firestore.collection(\"reviews\");\n        const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n        const data = postsDoc.docs.map(item => ({\n          id: item.id,\n          ...item.data()\n        }));\n        setReviews(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    })(); // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    //   .then((response) => response.json())\n    //   .then((json) => {\n    //     setPosts(json);\n    //     setLoading(false);\n    //   });\n\n  }, [setLoading, setReviews]);\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.movieImgWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.searchResultPic,\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      spacing: 0,\n      style: {\n        backgroundColor: '#FECEAB',\n        marginLeft: '50px',\n        marginRight: '50px',\n        marginTop: '100px',\n        height: '210px',\n        padding: '20px',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReviewList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Movie, \"IF02WLwRRKRze+K1PXnyX4VaFAc=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx"],"names":["React","useEffect","useState","ReviewList","Paper","firestore","useLocation","makeStyles","useStyles","theme","searchResultPic","width","height","maxWidth","maxHeight","objectFit","border","borderRadius","movieImgWrapper","Movie","classes","loading","setLoading","reviews","setReviews","movie","setMovie","location","movieId","URLSearchParams","search","get","fetch","then","response","json","data","postsRef","collection","postsDoc","where","docs","map","item","id","error","console","log","poster_path","backgroundColor","marginLeft","marginRight","marginTop","padding"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react'\nimport ReviewList from '../Components/ReviewList'\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\nimport { useLocation} from 'react-router-dom'\nimport '../Style.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  searchResultPic: {\n    width: '100%',\n    height: '100%',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    objectFit: 'cover',\n    border: '1px solid #2A363B',\n    borderRadius: '10px',\n  },\n  movieImgWrapper:{\n    height: '500px',\n    width:'100px'\n  }\n}))\n\nexport default function Movie(){\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [reviews, setReviews] = useState([]);\n    const[movie,setMovie] =useState([]);\n\n    const location = useLocation();\n    let movieId = new URLSearchParams(location.search).get('id') \n\n\n    useEffect(()=>{\n       setLoading(true)\n      //  (async ()=>{\n      //   try{\n      //     let response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n      //     response = await response.json()\n      //     setMovie(response) \n      //   }\n      //   catch(error){\n      //     setLoading(false);\n      //   }\n      //  })()\n      fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n      .then(response => response.json())\n      .then((data)=>{\n          setMovie(data)\n          setLoading(false)\n        })\n\n      },[setLoading, setMovie])\n\n    useEffect(() => {\n        setLoading(true);\n        (async () => {\n          try {\n            const postsRef = firestore.collection(\"reviews\");\n            const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n            const data = postsDoc.docs.map((item) => ({\n              id: item.id,\n              ...item.data(),\n            }));\n            setReviews(data);\n            setLoading(false);\n          } catch (error) {\n            setLoading(false);\n          }\n        })();\n        // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        //   .then((response) => response.json())\n        //   .then((json) => {\n        //     setPosts(json);\n        //     setLoading(false);\n        //   });\n      }, [setLoading, setReviews]);\n      console.log(movie)\n  \n    return(\n        <>\n        <div>\n          <div className={classes.movieImgWrapper}>\n            <img className={classes.searchResultPic}src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} ></img>\n          </div>\n        </div>\n        <Paper spacing={0} style={{backgroundColor: '#FECEAB', marginLeft: '50px',marginRight: '50px', marginTop: '100px',height: '210px',padding: '20px', height: '80vh'}}>\n            <ReviewList/>\n        </Paper>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}