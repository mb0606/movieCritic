{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Components/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase/firebase.util';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    reviewId\n  } = props;\n  useEffect(() => {\n    setLoading(true);\n\n    (async () => {\n      try {\n        const postsRef = firestore.collection(\"reviews\").doc(reviewId).collection('comments');\n        const postsDoc = await postsRef.get();\n        const data = postsDoc.docs.map(item => ({\n          id: item.id,\n          ...item.data()\n        }));\n        setComments(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [setLoading, setComments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"BodaciousMan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, this), \" \", comment.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"iJrH6CwGc57OWFo5E1OdwSYiMrY=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Components/Comments.jsx"],"names":["React","useState","useEffect","firestore","makeStyles","Comments","props","comments","setComments","loading","setLoading","reviewId","postsRef","collection","doc","postsDoc","get","data","docs","map","item","id","error","comment","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAaL,KAAnB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,KAAC,YAAY;AACX,UAAI;AACF,cAAME,QAAQ,GAAGT,SAAS,CAACU,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,CAAoCH,QAApC,EAA8CE,UAA9C,CAAyD,UAAzD,CAAjB;AACA,cAAME,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAT,EAAvB;AACA,cAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,IAAD,KAAW;AACxCC,UAAAA,EAAE,EAAED,IAAI,CAACC,EAD+B;AAExC,aAAGD,IAAI,CAACH,IAAL;AAFqC,SAAX,CAAlB,CAAb;AAIAT,QAAAA,WAAW,CAACS,IAAD,CAAX;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OATD,CASE,OAAOY,KAAP,EAAc;AACdZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAbD;AAcD,GAhBM,EAgBJ,CAACA,UAAD,EAAaF,WAAb,CAhBI,CAAT;AAmBA,sBACI;AAAA,cACWD,QAAQ,IACFA,QAAQ,CAACY,GAAT,CAAcI,OAAD,iBACV;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACuBD,OAAO,CAACA,OAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAFjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAnCuBlB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase/firebase.util';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Comments(props){\n    const [comments, setComments] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const {reviewId} = props;\n\n    useEffect(() => {\n        setLoading(true);\n        (async () => {\n          try {\n            const postsRef = firestore.collection(\"reviews\").doc(reviewId).collection('comments');\n            const postsDoc = await postsRef.get();\n            const data = postsDoc.docs.map((item) => ({\n              id: item.id,\n              ...item.data(),\n            }));\n            setComments(data);\n            setLoading(false);\n          } catch (error) {\n            setLoading(false);\n          }\n        })();\n      }, [setLoading, setComments]);\n\n\n    return(\n        <div>\n                  {comments\n                      && comments.map((comment) =>(\n                            <p style={{ margin: '0' }}>\n                              <b>BodaciousMan</b> {comment.comment}\n                          </p>\n                  ))}\n                  </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}