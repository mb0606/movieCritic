{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport ReviewList from '../Components/ReviewList';\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movie() {\n  _s();\n\n  useEffect(() => {\n    setLoading(true);\n\n    (async () => {\n      try {\n        const postsRef = firestore.collection(\"reviews\");\n        const postsDoc = await postsRef.get().where(\"movieId\", \"==\");\n        const data = postsDoc.docs.map(item => ({\n          id: item.id,\n          ...item.data()\n        }));\n        setPosts(data); // const postsDoc = await postsRef.get();\n        // console.log(\"post exists\", postsDoc.exists);\n        // if (!postsDoc.exists) {\n        //   setPosts([]);\n        // } else {\n        //   console.log(postsDoc.data());\n        //   setPosts(postsDoc.data());\n        // }\n\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    })(); // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    //   .then((response) => response.json())\n    //   .then((json) => {\n    //     setPosts(json);\n    //     setLoading(false);\n    //   });\n\n  }, [setLoading, setPosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      spacing: 0,\n      style: {\n        backgroundColor: '#FECEAB',\n        marginLeft: '50px',\n        marginRight: '50px',\n        marginTop: '100px',\n        height: '210px',\n        padding: '20px',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReviewList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Movie, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx"],"names":["React","useEffect","useState","ReviewList","Paper","firestore","Movie","setLoading","postsRef","collection","postsDoc","get","where","data","docs","map","item","id","setPosts","error","backgroundColor","marginLeft","marginRight","marginTop","height","padding"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAC3BL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,KAAC,YAAY;AACX,UAAI;AACF,cAAMC,QAAQ,GAAGH,SAAS,CAACI,UAAV,CAAqB,SAArB,CAAjB;AACA,cAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAT,GAAeC,KAAf,CAAqB,SAArB,EAAgC,IAAhC,CAAvB;AACA,cAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBC,IAAD,KAAW;AACxCC,UAAAA,EAAE,EAAED,IAAI,CAACC,EAD+B;AAExC,aAAGD,IAAI,CAACH,IAAL;AAFqC,SAAX,CAAlB,CAAb;AAIAK,QAAAA,QAAQ,CAACL,IAAD,CAAR,CAPE,CAQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAjBD,CAiBE,OAAOY,KAAP,EAAc;AACdZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KArBD,IAFY,CAyBZ;AACA;AACA;AACA;AACA;AACA;;AACD,GA/BM,EA+BJ,CAACA,UAAD,EAAaW,QAAb,CA/BI,CAAT;AAgCA,sBACI;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,UAAU,EAAE,MAAzC;AAAgDC,QAAAA,WAAW,EAAE,MAA7D;AAAqEC,QAAAA,SAAS,EAAE,OAAhF;AAAwFC,QAAAA,MAAM,EAAE,OAAhG;AAAwGC,QAAAA,OAAO,EAAE,MAAjH;AAAyHD,QAAAA,MAAM,EAAE;AAAjI,OAA1B;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAQH;;GAzCuBlB,K;;KAAAA,K","sourcesContent":["import {React, useEffect, useState} from 'react'\nimport ReviewList from '../Components/ReviewList'\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\n\nexport default function Movie(){\n    useEffect(() => {\n        setLoading(true);\n        (async () => {\n          try {\n            const postsRef = firestore.collection(\"reviews\");\n            const postsDoc = await postsRef.get().where(\"movieId\", \"==\");\n            const data = postsDoc.docs.map((item) => ({\n              id: item.id,\n              ...item.data(),\n            }));\n            setPosts(data);\n            // const postsDoc = await postsRef.get();\n            // console.log(\"post exists\", postsDoc.exists);\n            // if (!postsDoc.exists) {\n            //   setPosts([]);\n            // } else {\n            //   console.log(postsDoc.data());\n            //   setPosts(postsDoc.data());\n            // }\n            setLoading(false);\n          } catch (error) {\n            setLoading(false);\n          }\n        })();\n    \n        // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        //   .then((response) => response.json())\n        //   .then((json) => {\n        //     setPosts(json);\n        //     setLoading(false);\n        //   });\n      }, [setLoading, setPosts]);\n    return(\n        <>\n        <Paper spacing={0} style={{backgroundColor: '#FECEAB', marginLeft: '50px',marginRight: '50px', marginTop: '100px',height: '210px',padding: '20px', height: '80vh'}}>\n            <ReviewList/>\n        </Paper>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}