{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport ReviewList from '../Components/ReviewList';\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movie() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  let movieId = new URLSearchParams(location.search).get('id'); // useEffect(() => {\n  //     setLoading(true);\n  //     (async () => {\n  //       try {\n  //         const postsRef = firestore.collection(\"reviews\");\n  //         const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n  //         const data = postsDoc.docs.map((item) => ({\n  //           id: item.id,\n  //           ...item.data(),\n  //         }));\n  //         setReviews(data);\n  //         console.log(data)\n  //         console.log(movieId)\n  //         setLoading(false);\n  //       } catch (error) {\n  //         setLoading(false);\n  //       }\n  //     })();\n  //     // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //     //   .then((response) => response.json())\n  //     //   .then((json) => {\n  //     //     setPosts(json);\n  //     //     setLoading(false);\n  //     //   });\n  //   }, [setLoading, setReviews]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`).then(response => response.json()).then(data => {\n      setMovie(data.results);\n      setLoading(false);\n    });\n  }, [setLoading, setMovie]);\n  console.log(\"moviedb api call\");\n  console.log(movie);\n  console.log(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      spacing: 0,\n      style: {\n        backgroundColor: '#FECEAB',\n        marginLeft: '50px',\n        marginRight: '50px',\n        marginTop: '100px',\n        height: '210px',\n        padding: '20px',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReviewList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Movie, \"SP6OOEhmTxFxD2hfdH/xTseTURg=\", false, function () {\n  return [useLocation];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/michaelbranconier/Documents/LMU/Spring 2021/CMSI-298-projects/movieCritic/movie-critic/src/Pages/Movie.jsx"],"names":["React","useEffect","useState","ReviewList","Paper","firestore","useLocation","Movie","loading","setLoading","reviews","setReviews","movie","setMovie","location","movieId","URLSearchParams","search","get","fetch","then","response","json","data","results","console","log","backgroundColor","marginLeft","marginRight","marginTop","height","padding"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,WAAT,QAA2B,kBAA3B;;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAK,CAACU,KAAD,EAAOC,QAAP,IAAkBX,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMY,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAIS,OAAO,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,EAAqCC,GAArC,CAAyC,IAAzC,CAAd,CAP2B,CAS3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAjB,EAAAA,SAAS,CAAC,MAAI;AACZQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,IAAAA,KAAK,CAAE,sCAAqCJ,OAAQ,2CAA/C,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACVV,MAAAA,QAAQ,CAACU,IAAI,CAACC,OAAN,CAAR;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAMC,GARM,EAQJ,CAACA,UAAD,EAAaI,QAAb,CARI,CAAT;AASEY,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCX,OAAQ,2CAA1D;AACF,sBACI;AAAA,4BACA;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAMA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACY,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,UAAU,EAAE,MAAzC;AAAgDC,QAAAA,WAAW,EAAE,MAA7D;AAAqEC,QAAAA,SAAS,EAAE,OAAhF;AAAwFC,QAAAA,MAAM,EAAE,OAAhG;AAAwGC,QAAAA,OAAO,EAAE,MAAjH;AAAyHD,QAAAA,MAAM,EAAE;AAAjI,OAA1B;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAaH;;GA7DuBxB,K;UAMHD,W;;;KANGC,K","sourcesContent":["import {React, useEffect, useState} from 'react'\nimport ReviewList from '../Components/ReviewList'\nimport Paper from '@material-ui/core/Paper';\nimport { firestore } from '../firebase/firebase.util';\nimport { useLocation} from 'react-router-dom'\n\nexport default function Movie(){\n\n    const [loading, setLoading] = useState(false);\n    const [reviews, setReviews] = useState([]);\n    const[movie,setMovie] =useState([]);\n\n    const location = useLocation();\n    let movieId = new URLSearchParams(location.search).get('id') \n\n    // useEffect(() => {\n    //     setLoading(true);\n    //     (async () => {\n    //       try {\n    //         const postsRef = firestore.collection(\"reviews\");\n    //         const postsDoc = await postsRef.where(\"movieId\", \"==\", movieId).get();\n    //         const data = postsDoc.docs.map((item) => ({\n    //           id: item.id,\n    //           ...item.data(),\n    //         }));\n    //         setReviews(data);\n    //         console.log(data)\n    //         console.log(movieId)\n\n    //         setLoading(false);\n    //       } catch (error) {\n    //         setLoading(false);\n    //       }\n    //     })();\n    //     // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    //     //   .then((response) => response.json())\n    //     //   .then((json) => {\n    //     //     setPosts(json);\n    //     //     setLoading(false);\n    //     //   });\n    //   }, [setLoading, setReviews]);\n\n    useEffect(()=>{\n      setLoading(true)\n      fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n      .then(response => response.json())\n      .then((data)=>{\n          setMovie(data.results)\n          setLoading(false)\n        })\n      }, [setLoading, setMovie])\n      console.log(\"moviedb api call\")\n      console.log(movie)\n      console.log(`https://api.themoviedb.org/3/movie/${movieId}?api_key=436a07c5838058f745a532d6f8cbc1d6`)\n    return(\n        <>\n        <div>\n          <div>\n            <img src=''></img>\n          </div>\n        </div>\n        <Paper spacing={0} style={{backgroundColor: '#FECEAB', marginLeft: '50px',marginRight: '50px', marginTop: '100px',height: '210px',padding: '20px', height: '80vh'}}>\n            <ReviewList/>\n        </Paper>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}