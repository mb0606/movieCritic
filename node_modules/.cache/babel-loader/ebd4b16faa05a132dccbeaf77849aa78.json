{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6qsgQajHMkwS9ZgLrrvjBchc4ReDCpKM\",\n  authDomain: \"brady-9a097.firebaseapp.com\",\n  projectId: \"brady-9a097\",\n  storageBucket: \"brady-9a097.appspot.com\",\n  messagingSenderId: \"80307267436\",\n  appId: \"1:80307267436:web:6d5687491c6511bcb17549\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); //window.location.href = '/about'\n};\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      username\n    } = user;\n\n    try {\n      await userRef.set({ ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebase;","map":{"version":3,"sources":["/Volumes/EX-DRIVE/Code_HW/SSprojects/movieCritic/src/firebase/firebase.util.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","email","username","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,6BAFS;AAGrBC,EAAAA,SAAS,EAAE,aAHU;AAIrBC,EAAAA,aAAa,EAAE,yBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,aALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AAUAP,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB;AAEA,MAAMQ,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAjB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpCF,EAAAA,IAAI,CAACG,eAAL,CAAqBJ,QAArB,EADoC,CAEpC;AACD,CAHM;AAMP,OAAO,MAAMK,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAClE,MAAI,CAACD,IAAL,EAAW;AACX,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,IAAI,CAACK,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBV,IAA5B;;AACA,QAAI;AACF,YAAME,OAAO,CAACS,GAAR,CAAY,EAChB,GAAGV;AADa,OAAZ,CAAN;AAGD,KAJD,CAIE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOE,eAAe,CAACd,IAAI,CAACK,GAAN,CAAtB;AACD,CAfM;;AAgBP,MAAMS,eAAe,GAAG,MAAMT,GAAN,IAAa;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMU,YAAY,GAAG,MAAMZ,SAAS,CAACC,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGU,YAAY,CAACC,IAAb;AAFE,KAAP;AAID,GAND,CAME,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,CAXD;;AAcA,OAAO,MAAMjB,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMQ,SAAS,GAAGlB,QAAQ,CAACkB,SAAT,EAAlB;AAEP,eAAelB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6qsgQajHMkwS9ZgLrrvjBchc4ReDCpKM\",\n  authDomain: \"brady-9a097.firebaseapp.com\",\n  projectId: \"brady-9a097\",\n  storageBucket: \"brady-9a097.appspot.com\",\n  messagingSenderId: \"80307267436\",\n  appId: \"1:80307267436:web:6d5687491c6511bcb17549\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n  //window.location.href = '/about'\n};\n\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, username } = user;\n    try {\n      await userRef.set({\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}